// ===============================================
// Font setup
// ===============================================

@font-face {
  font-family: 'CinzelBold';
  font-style: normal;
  font-weight: 700;
  src: local('Cinzel-Bold'), url(fonts/Cinzel-Bold.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}

@font-face {
  font-family: 'MinionPro';
  src: url('fonts/Minion Pro Regular.ttf') format('truetype');
}

// ===============================================
// Transitional animation classes
// ===============================================

.NEXT-enter {
  transform: translate(100%);
}
.NEXT-enter.NEXT-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.NEXT-leave {
  position:absolute;
  transform: translate(0%);
}
.NEXT-leave.NEXT-leave-active {
  transform: translate(-100%);
  transition: transform 300ms ease-in-out;
}

.PREV-enter {
  transform: translate(-100%);
}
.PREV-enter.PREV-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.PREV-leave {
  position:absolute;
  transform: translate(0%);
}
.PREV-leave.PREV-leave-active {
  transform: translate(100%);
  transition: transform 300ms ease-in-out;
}

// ===============================================
// Constants
// ===============================================

$abswidthmax: 769px;
$absheightmax: 1025px;
$absmaxdimension: 1025px;
$lineheight: 1.2;

$sizemap: (
  appbar: 48px,
  inputsquare: 48px,
  inputspacing: 16px, /* slightly larger on small devices (to prevent false touches) */
  input: 32px, /* size of input icon-style buttons */
  watermark: 36vh, /* height-specific */
  huge: 12vmin,
  large: 6vmin,
  icon: 4.5vmin,
  base: 2vmin,
  small: 1vmin,
  tiny: 0.5vmin,
);

$fontsizemap: (
  timervalue: 24vmin,
  title: 6vmin,
  interactive: 5.5vmin,
  flavor: 4.7vmin,
  label: 18px, // purposefully fixed-size
);

@function fontsize($key) {
  @if map-has-key($fontsizemap, $key) {
    @return map-get($fontsizemap, $key);
  }

  @warn "Unknown `#{$key}` in $fontsizemap.";
  @return null;
}

@function size($key) {
  @if map-has-key($sizemap, $key) {
    @return map-get($sizemap, $key);
  }

  @warn "Unknown `#{$key}` in $sizemap.";
  @return null;
}

$headerfont: CinzelBold, serif;

$font_color_primary: #000000;
$font_color_faded: #666666;

$border_primary: 0.02in solid #000;
$border_accent: 0.02in solid #333;
$border_accent_thin: 0.01in solid #333;
$border_faded: 0.02in solid #777;
$border_desktop: size(base) solid #777;

$bg_primary: #F4ECC8;
$bg_inactive: #222222;
$bg_titlebar: rgba(255, 255, 235, 0.65);
$bg_accent: rgb(220, 220, 220);
$bg_interactive: rgba(245, 238, 210, 0.7);
$bg_active: rgba(255, 255, 255, 0.9);

$font_color_dark_primary: #FFFFFF;
$border_dark_primary: 0.02in solid #999;
$bg_dark_primary: #161011;
$bg_dark_titlebar: rgba(110, 110, 110, 0.6);
$bg_dark_interactive: rgba(35, 35, 35, 0.5);

$font_color_red_primary: #FFFFFF;
$border_red_primary: 0.02in solid #999;
$bg_red_primary: #B71C1C; /* red900 */
$bg_red_titlebar: rgba(120, 14, 14, 1);
$bg_red_interactive: rgba(60, 20, 20, 1);

// ===============================================
// Base/General Styles
// ===============================================

body {
  background-color: $bg_inactive;
  overflow:hidden;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: MinionPro;
  user-select: none;
}

#noscript {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.float_left {
  float: left;
}

.float_right {
  float: right;
}

.snackbar {
  span {
    color: $font_color_dark_primary !important;
  }
}

@mixin styling() {

  .base_card {
    height: 100%;
    display: flex;
    flex-direction: column;
    background-color: $bg_primary;
    background-image: url(images/papyrus-tiled.jpg);
    background-size: 100% auto;
    background-repeat: repeat;
    background-position: 0 0;
    color: $font_color_primary;
    overflow-y: auto;
    &.RED {
      background: $bg_red_primary;
      color: $font_color_red_primary;
      .title_container {
        background-color: $bg_red_titlebar;
        svg {
          color: $font_color_red_primary !important;
        }
      }
      .scrollbox_top {
        display: none;
      }
      .base_button > button, .base_checkbox button, .base_picker {
        background-color: $bg_red_interactive !important;
        svg {
          color: $font_color_red_primary !important;
        }
      }
      .base_button > button {
        border: $border_red_primary !important;
      }
    }
    &.DARK {
      background-color: $bg_dark_primary;
      background-image: url(images/encounter-tiled.jpg);
      color: $font_color_dark_primary;
      .scrollbox_top {
        display: none;
      }
      .title_container {
        background-color: $bg_dark_titlebar;
        svg {
          color: $font_color_dark_primary !important;
        }
      }
      .base_button > button, .base_checkbox button, .base_picker {
        background-color: $bg_dark_interactive !important;
        svg {
          color: $font_color_dark_primary !important;
          fill: $font_color_dark_primary !important;
        }
      }
      .base_button > button {
        border: $border_dark_primary !important;
      }
    }
    .title_container, .base_button > button, .base_checkbox button, .base_picker {
      svg {
        color: $font_color_primary !important;
      }
    }
    .base_button.bigbutton > button {
      font-size: 200% !important;
      text-align: center !important;
    }
    .child_wrapper {
      margin: size(large);
      margin-top: size(small);
      margin-bottom: 9vw;
      position: relative;
    }
    .article {
      position: relative;
      padding: size(base);
      font-size: fontsize(flavor);
      .scrollbox_top {
        margin-top: size(tiny);
        margin-bottom: -(size(base));
        opacity: 0.3;
      }
      .scrollbox {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        #bgimg {
          position: absolute;
          height: size(watermark);
          width: size(watermark);
          right: 0;
          top: size(huge);
          margin-right: -10%;
          margin-top: 4vh;
          opacity: 0.2;
        }
        overflow-x: hidden;
      }
    }
    .title_container {
      position: relative;
      background-color: $bg_titlebar;
      padding: 0;
      line-height: size(appbar);
      height: size(appbar);
      > button {
        float: left;
        padding: 0 !important;
        svg {
          height: size(input) !important;
          width: size(input) !important;
        }
      }
      .menu {
        float: right;
        padding: 0;
        font-size: fontsize(interactive);
      }
      .title {
        font-family: $headerfont;
        font-size: fontsize(title);
        display: inline-block;
        text-align: center;
        position: absolute;
        top: 1px;
        left: size(appbar);
        right: size(appbar);
        height: 100%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }
    }
    .header {
      background-color: $bg_titlebar;
      line-height: 1.2;
      padding: size(base)/2 size(base) size(base)/2 size(base);
      font-size: fontsize(flavor);

      .searchHeader {
        .filter_button button {
          padding: 0 !important;
          border: 0 !important;
          margin: 0 !important;
          background: transparent !important;
          font-size: fontsize(flavor) !important;
          min-width: 40px !important;
        }
        .inline_icon {
          height: fontsize(flavor);
          width: fontsize(flavor);
        }
      }
    }
  }

  ol, ul {
    padding-left: size(icon);

    li {
      padding-bottom: size(tiny);
    }
  }

  .inline_icon {
    width: size(icon);
    margin-bottom: -(size(tiny));
  }

  i .inline_icon {
    margin-left: fontsize(flavor)/8;
    margin-right: -(fontsize(flavor)/8);
  }

  .starContainer {
    .stars {
      display: flex;
      justify-content: center;
    }
    .star {
      order: 1;
      height: size(inputsquare) !important;
      button {
        min-width: 0 !important;
        height: size(inputsquare) !important;
        svg {
          width: size(input) !important;
          height: size(input) !important;
          padding: size(inputspacing)/2 !important; /* /2 since applied to both sides */
          margin-top: -0.5 * size(small) !important;
        }
        &:hover {
          fill: black !important;
        }
        &.editable:hover {
          cursor: pointer;
        }
        &:disabled svg {
          padding-left: 0 !important;
          padding-right: 0 !important;
        }
      }
    }
    .quantity {
      height: size(inputsquare);
      font-size: size(inputsquare) / 2;
      line-height: size(inputsquare);
      order: 2;
      padding-left: size(small);
    }
    .hint {
      color: #757575;
      text-align: center;
    }
  }

  .base_button {
    > button {
      display: block !important;
      height: auto !important;
      width: 100% !important;
      font-size: fontsize(interactive) !important;
      padding: size(base) !important;
      padding-top: size(base) !important;
      padding-bottom: size(base) !important;
      margin: 0 !important;
      margin-top: size(inputspacing) !important;
      border: $border_accent !important;
      background-color: $bg_interactive !important;
      text-align: left !important;
      text-transform: none !important;
      text-decoration: none !important;
      color: inherit !important;
      line-height: $lineheight !important;
      > div {
        display: block !important;
      }
      &:disabled {
        border: $border_faded !important;
        color: $font_color_faded !important;
      }
    }
  }

  .base_checkbox {
    button {
      height: auto !important;
      display: block !important;
      font-size: fontsize(interactive) !important;
      line-height: $lineheight;
      padding: size(base) !important;
      padding-top: size(base) !important;
      padding-bottom: size(base) !important;
      margin: 0 !important;
      margin-top: size(inputspacing) !important;
      border: $border_accent !important;
      background-color: $bg_interactive !important;
      text-align: center !important;
      text-transform: none !important;
      text-decoration: none !important;
      color: inherit !important;
      width: 100% !important;
    }
    div { /* style duct tape, otherwise line height not properly applied to children */
      line-height: $lineheight;
    }
    .label {
      font-family: $headerfont;
      line-height: $lineheight;
    }
    .icon {
      display: inline-block;
      top: size(small);
      margin-left: size(tiny);
      position: relative;
      height: fontsize(interactive) !important;
      width: fontsize(interactive) !important;

      svg {
        height: 100% !important;
        width: 100% !important;
      }
    }
    .subtext {
      font-size: fontsize(flavor);
      line-height: $lineheight;
    }
  }

  .textfield {
    font-size: inherit !important;
    line-height: inherit !important;
    padding-bottom: size(base) !important;
    height: auto !important;

    div:first-child {
      top: size(base);
      left: size(base);
      color: $font_color_faded !important;
    }

    textarea {
      font-size: fontsize(flavor) !important;
      line-height: $lineheight !important;
      padding: size(base) !important;
      background-color: $bg_interactive !important;
      border: $border_accent_thin !important;
      margin-top: 0 !important;
      user-select: all;
    }

    input {
      padding: size(base) !important;
      height: auto !important;
      box-sizing: border-box;
      background-color: $bg_interactive !important;
      border: $border_accent_thin !important;
    }
  }

  .selectfield {
    margin-top: -6px;
    width: 100% !important;
    font-size: fontsize(flavor) !important;

    label {
      font-size: fontsize(label) !important;
      transform: scale(1) translate(0px, -28px) !important;
    }

    &.halfLeft {
      width: 45% !important;
      margin-right: 5%;
    }
    &.halfRight {
      width: 45% !important;
      margin-left: 5%;
    }
  }

  .inputSpacer { /* for text inputs that are close to bottom, give the screen space to scroll up */
    margin-bottom: 100%;
  }

  .callout {
    display: flex;
    flex-direction: row;
    p > img {
      width: size(large);
      height: size(large);
      display: inline-block;
    }
    .text {
      font-style: italic;
      padding-left: size(base);
      padding-right: size(base);
    }
  }

  .base_main {
    position: absolute;
    width: 100%;
    height: 100%;
    max-width: $absmaxdimension;
    max-height: $absmaxdimension;
  }

  .base_multi_touch_trigger {
    position: absolute;
  }

  .base_picker {
    height: auto;
    display: block;
    font-size: fontsize(interactive);
    padding: size(base);
    padding-top: size(base);
    padding-bottom: size(base);
    margin: 0;
    margin-top: size(inputspacing);
    border: $border_accent;
    background-color: $bg_interactive;
    text-align: center;
    text-transform: none;
    text-decoration: none;
    color: inherit;
    .subtext {
      font-size: fontsize(flavor);
    }
    .value {
      flex: 10;
      font-family: $headerfont;
      line-height: size(inputsquare);
    }
    .controls {
      display: flex;
      flex-direction: row;

      :first-child {
        float: left;
      }

      :last-child {
        float: right;
      }
    }
    button {
      height: size(inputsquare) !important;
      width: size(inputsquare) !important;
      min-height: size(input) !important;
      min-width: size(input) !important;
      padding: 0 !important;
      border: 0 !important;
      margin-left: size(small);
      margin-right: size(small);

      svg {
        height: 100% !important;
        width: 100% !important;
      }
    }
  }

  .base_timer_card {
    &.DARK {
      color: $font_color_dark_primary;
      background-color: $bg_dark_primary;
    }
    width: 100%;
    height: 100%;
    background-color: inherit;
    color: inherit;

    background: url(/images/clock_small.svg) no-repeat center center;
    background-size: 75% 75%;

    .value {
      font-size: fontsize(timervalue);
      font-family: $headerfont;
      text-align: center;
      position: absolute;
      width: 100%;
      top: 50%;
      margin-top: -(fontsize(timervalue))/2;
      line-height: 1;
    }
    .secondary {
      font-size: 130%;
      text-align: center;
      position: absolute;
      left: 10%;
      right: 10%;
      top: 60%;
    }
    .tertiary {
      text-align: center;
      position: absolute;
      left: 10%;
      right: 10%;
      bottom: 10%;
    }
  }

  .rolls {
    text-align: center;
    padding-bottom: size(base);
    .roll {
      font-size: fontsize(title);
      display: inline-block;
      margin: 0 size(base);
      padding: 0 size(base);
      &:first-child {
        margin-left: 0;
      }
      &:last-child {
        margin-right: 0;
      }
    }
  }

  // ===============================================
  // Card-specific styles
  // ===============================================

  .splash_screen {
    width: 100%;
    height: 100%;
    position: relative;
    background-color: #4F301B;
    background-image: url(images/leather.jpg);
    background-size: cover;
    color: $font_color_dark_primary;

    .center {
      width: 90%;
      left: 50%;
      margin-left: -45%;
      position: absolute;
      display: flex;
      flex-direction: column;
      top: 50%;
      margin-top: -10%;
      height: 20%;
      font-size: fontsize(flavor);
      text-align: center;
    }
    .logo {
      position: absolute;
      top: size(small);
      left: size(small);
      right: size(small);
      img {
        width: 100%;
      }
    }
    .no_multi_button {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      button {
        text-align: center !important;
        font-size: fontsize(flavor) !important;
      }
    }
  }

  .combat {
    &.center {
      text-align: center;
    }
    &.draw_enemies {
      span.meta {
        display: inline-block;
      }
    }
  }

  .advanced_play, .featured_quest, .searchResult {
    padding-left: size(base);
    padding-right: size(base);
    .title {
      line-height: $lineheight;
      font-family: $headerfont;
      display: block;
      font-size: fontsize(interactive);
      margin-bottom: size(small);
      top: 0;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }
    .summary {
      display: flex;
      flex: 3;
      line-height: $lineheight;
      margin: 0;
      font-size: fontsize(flavor);
    }
    .inline_icon {
      padding-right: size(base);
      margin-bottom: -1 * size(tiny);
    }
    .timing {
      opacity: 0.65;
      margin-top: size(small);
      margin-right: fontsize(flavor);
      font-size: fontsize(flavor);
      display: inline-block;
      .inline_icon {
        padding-right: size(small);
        width: fontsize(flavor);
        height: fontsize(flavor);
      }
    }
    .searchOrderDetail {
      opacity: 0.65;
      font-size: fontsize(flavor);
      display: inline-block;
      float: right;
      margin-top: size(small);

      &.ratingavg {
        .starContainer {
          .quantity {
            height: fontsize(flavor);
            line-height: fontsize(flavor);
            font-size: fontsize(flavor);
          }
          .star {
            $starSize: fontsize(flavor) + size(small);
            margin-top: -0.5 * size(small) !important;
            height: $starSize !important;
            button {
              height: $starSize !important;
              line-height: $starSize !important;
              svg {
                height: $starSize !important;
                width: $starSize !important;
                padding: 0 !important;
              }
            }
          }
        }
      }
    }
  }

  .searchDetails {
    text-align: center;

    .author {
      font-style: italic;
    }
  }

  .reportCategory {
    text-align: center;
    button {
      border: 2px solid rgba(0,0,0,0) !important;
      min-width: 40px !important;
      padding: 0 size(inputspacing)/2 !important; /* /2 since applied to both sides */
      margin: size(inputspacing)/2 !important; /* /2 since applied to both sides */
    }
    .selected button {
      border: 2px solid black !important;
    }
  }

  .searchForm {
    button:disabled {
      color: $font_color_primary !important;
    }
  }

  .ratingDescription {
    font-size: fontsize(label);
    ul {
      margin-top: size(tiny);
      padding-left: fontsize(label);
    }
  }
}

@include styling();

// ===============================================
// Apply scaling or fixed styling if we're on
// a desktop. Center and border the fixed result.
// ===============================================

// On large screens, shrink a bit...
$abs_scale_vw: $abswidthmax / 120vmin;
$abs_scale_vh: $absheightmax / 120vmin;

$sizemap: (
  appbar: 48px,
  inputspacing: 14px,
  inputsquare: 48px,
  input: 32px,
  watermark: 36vmin * $abs_scale_vh, /* note: height-specific */
  huge: 12vmin * $abs_scale_vh,
  large: 6vmin * $abs_scale_vh,
  icon: 4vmin * $abs_scale_vh,
  base: 2vmin * $abs_scale_vh,
  small: 1vmin * $abs_scale_vh,
  tiny: 0.5vmin * $abs_scale_vh,
);

$fontsizemap: (
  title: 6vmin * $abs_scale_vw,
  timervalue: 24vmin * $abs_scale_vw,
  interactive: 5.5vmin * $abs_scale_vw,
  flavor: 4.7vmin * $abs_scale_vw,
  label: 18px,
);

@media screen and (min-width: $abswidthmax), screen and (min-height: $absheightmax) {
  @include styling();

  body, html, #react-app {
    height: 100%;
    width: 100%;
  }

  .editor_override .app_container {
    border: none;
    border-radius: 0;
    margin-top: 0;
  }

  .app_container {
    position: relative;
    border-left: $border_desktop;
    border-right: $border_desktop;
    display: block;
    overflow: hidden;
    width: $abswidthmax;
    height: $absheightmax;
    max-width: 100%;
    max-height: 100%;
    margin: auto;
  }
}

@media screen and (min-height: $absheightmax + size(base)) {
  .app_container {
    border-top: $border_desktop;
    border-bottom: $border_desktop;
    border-radius: size(base);
  }
}

@media screen and (min-height: $absheightmax + 2 * size(base) + 40px) {
  .app_container {
    margin-top: 20px;
  }
}
